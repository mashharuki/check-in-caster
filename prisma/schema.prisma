generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  fid          String    @id
  username     String?
  display_name String?
  pfp_url      String?
  badges       Badge[]
  checkins     Checkin[]
  reviews      reviews[]
}

model Checkin {
  checkin_id  String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fid         String
  text        String?
  embeds      Json?
  timestamp   DateTime
  parent_hash String?
  location    String?
  city        String?
  country     String?
  image       String?
  category    String?
  coordinates Json?
  bookmarks   Bookmarks[]
  user        User        @relation(fields: [fid], references: [fid])
  metadata    Metadata[]
}

model Metadata {
  metadata_id     String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token_id        String
  check_in_ref_id String  @db.Uuid
  checkin         Checkin @relation(fields: [check_in_ref_id], references: [checkin_id])
}

model Bookmarks {
  bookmark_id     String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fid             String
  check_in_ref_id String  @db.Uuid
  checkin         Checkin @relation(fields: [check_in_ref_id], references: [checkin_id])
}

model Badge {
  badge_id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fid              String
  name             String?
  image            String?
  contract_address String?
  tx_hash          String?
  user             User    @relation(fields: [fid], references: [fid])
}

model reviews {
  review_id String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating    Float
  comment   String?
  fid       String
  by        String?
  User      User    @relation(fields: [fid], references: [fid])
}
